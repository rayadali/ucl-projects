===============================================================================================================
---------------------------------------------------------------------------------------------------------------
				Setting up with mysql under unix
---------------------------------------------------------------------------------------------------------------
===============================================================================================================
Type the first script to create a minimal configuration file: 

ucl_gen_my_cnf > ~/.my.cnf 

The second script creates some initial database files and closes some security holes that are present in the 
default initial server installation. 

ucl_mysql_init 

The system will now ask you for a password for the 'root' account of your database server. You will be asked for 
the password everytime you subsequently begin a Mysql session. A new directory called ‘Mysql’ will appear in 
your directory containing the initial files and an empty database called ‘test’ which you can ignore. From 
now on, you are recognised by Mysql as a database administrator and user.

Once the server is initialised, you should start it by typing:

mysqld_safe & 

[nb: this is the command needed on the software version in the student labs; some other versions may have the 
command differently: safe_mysqld & ]

You won’t need to use the above scripts again. You have now set up an account with Mysql

You can now connect to the Mysql server by typing this statement:

mysql -u root –p 

Each time you want to start a new session with Mysql you should begin by invoking this script. 

The system will respond by asking you to give the root password you earlier chose. After you input the password, 
you will be given the Mysql prompt ( mysql>) , indicating that your session has begun. Here's a simple command 
that asks the server to tell you its version number and the current date: 

SELECT VERSION(), CURRENT_DATE; 
At the end of a session you can shut down your client service by typing:

mysqladmin -u root -p shutdown
===============================================================================================================
---------------------------------------------------------------------------------------------------------------
				Creating a simple database
---------------------------------------------------------------------------------------------------------------
===============================================================================================================
Create a new database called ‘shop’ with this sql statement 
CREATE DATABASE shop;

You should see a new directory called ‘shop’ in your file directory containing the table files. Creating a 
database does not select it for use; you must do that explicitly. To make ‘shop’ the current database, 
use this sql statement: 
USE shop;

Creating the database is the easy part, but at this point it's empty, as SHOW TABLES will tell you: 
SHOW TABLES;

Now create 3 tables : customers, items, orders, as follows:

CREATE TABLE customers (customerid VARCHAR(5), firstname VARCHAR(20), lastname VARCHAR(20), city VARCHAR(30), state VARCHAR (30));

CREATE TABLE items (itemid VARCHAR(2), itemname VARCHAR(25), cost DECIMAL(6,2));

CREATE TABLE orders (customerid VARCHAR(5), itemid VARCHAR(2), date DATE, quantity INT (4), linecost DECIMAL(6,2));

Review the tables you have created:

SHOW TABLES;

Now verify that a table was created the way you expected:

DESCRIBE customers;

To populate your tables you need to copy data into them as a block from a set of three text files, each of 
which has its own button on the coursework page you just came from. The files are items, orders and customers
and will open in a new browser window. Save each file into the ‘shop’ directory: 

Load the text file `orders.txt' into the orders table as follows: 
LOAD DATA LOCAL INFILE "orders.txt" INTO TABLE orders;

Do the same for the customers and items data

LOAD DATA LOCAL INFILE "items.txt" INTO TABLE items;
LOAD DATA LOCAL INFILE "customers.txt" INTO TABLE customers;

As a test, try loading a single record into the items table
INSERT INTO items VALUES ('M10','mosquito_net',’20.00’);

Now view the data in the items table:
SELECT * 
FROM items;
===============================================================================================================
---------------------------------------------------------------------------------------------------------------
				Querying the database - Assignment Questions
---------------------------------------------------------------------------------------------------------------
===============================================================================================================
You will need to collect the results from each query into a separate file by using the INTO OUTFILE statement, 
as in the following example where the items table is dumped into the file scr.

SELECT * 
INTO OUTFILE 'scr'
FROM items;

For each of the following questions write an SQL query and collect the results in a text file. Print the results 
for each query and with the query and submit them.

1. Give the complete details of all customers living in Washington or Oregon

2. How many customers live in each state of which we have a record?

3. What is the surname of the customer who ordered an S4?

4. What are the surnames of customers who have ordered items costing more than $28?

5. Which items were ordered by each customer and what was the price of each item? List your answer in descending 
order of customer last name. 

6. For people who ordered more than one item, what was the total cost of the items they ordered and how many items 
did they order? 

7. Write a query of your own that involves a sub-select and two tables. You need to say what question the query 
is answering, ie like the questions above, you need to submit the query and the query results.