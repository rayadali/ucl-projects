<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Ant test" failures="0" tests="84" time="0.033" errors="0">
  <properties/>
  <testcase name="testAddAll" time="0.0010" classname="mybag.BagTest"/>
  <testcase name="testAddAll" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testAddAll" time="0.0010" classname="mybag.BagTest"/>
  <testcase name="testAddAll2" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testAddAll2" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testAddAll2" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testContains" time="0.0010" classname="mybag.BagTest"/>
  <testcase name="testContains" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testContains" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testEmptyIterator" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testEmptyIterator" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testEmptyIterator" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testEmptySize" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testEmptySize" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testEmptySize" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneEmptyCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneEmptyCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneEmptyCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneOccurencesCountOf" time="0.0010" classname="mybag.BagTest"/>
  <testcase name="testOneOccurencesCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneOccurencesCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneRemoveOccurences" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneRemoveOccurences" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneRemoveOccurences" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneSize" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneSize" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneSize" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneSizeAddDuplicate" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneSizeAddDuplicate" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOneSizeAddDuplicate" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherEmptyCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherEmptyCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherEmptyCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorThreeNoDuplicates" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorThreeNoDuplicates" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorThreeNoDuplicates" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorThreeWithDuplicates" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorThreeWithDuplicates" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorThreeWithDuplicates" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorTwoNoDuplicates" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorTwoNoDuplicates" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorTwoNoDuplicates" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorTwoWithDuplicates" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorTwoWithDuplicates" time="0.0010" classname="mybag.BagTest"/>
  <testcase name="testOtherIteratorTwoWithDuplicates" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherOccurencesCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherOccurencesCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherOccurencesCountOf" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherRemoveOccurences" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherRemoveOccurences" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherRemoveOccurences" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherSize" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherSize" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherSize" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherSizeAddDuplicate" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherSizeAddDuplicate" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherSizeAddDuplicate" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherSizeDecrease" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherSizeDecrease" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherSizeDecrease" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherToString" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherToString" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testOtherToString" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testSizeDecrease" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testSizeDecrease" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testSizeDecrease" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testSubtract" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testSubtract" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testSubtract" time="0.0" classname="mybag.BagTest"/>
  <testcase name="testNegativeSize" time="0.0" classname="mybag.ExceptionThrowingTest"/>
  <testcase name="testNegativeSize" time="0.0010" classname="mybag.ExceptionThrowingTest"/>
  <testcase name="testNegativeSize" time="0.0" classname="mybag.ExceptionThrowingTest"/>
  <testcase name="testSizeTooLarge" time="0.0" classname="mybag.ExceptionThrowingTest"/>
  <testcase name="testSizeTooLarge" time="0.0" classname="mybag.ExceptionThrowingTest"/>
  <testcase name="testSizeTooLarge" time="0.0" classname="mybag.ExceptionThrowingTest"/>
  <testcase name="testSizeTooSmall" time="0.0" classname="mybag.ExceptionThrowingTest"/>
  <testcase name="testSizeTooSmall" time="0.0" classname="mybag.ExceptionThrowingTest"/>
  <testcase name="testSizeTooSmall" time="0.0" classname="mybag.ExceptionThrowingTest"/>
</testsuite>
